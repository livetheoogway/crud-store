name: Manual Deployment to Maven Central

on:
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: "üë∑ Checkout code"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: "‚òï Set up java"
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: maven

      - name: "üîß Compile"
        run: mvn compile

  publish:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: "üë∑ Checkout code"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: "üîë Import GPG Key"
        run: |
          echo "${{ secrets.MAVEN_GPG_PRIVATE_KEY }}" | base64 -d | gpg --batch --import

      - name: "üõ† Configure GPG to Allow Loopback"
        run: |
          mkdir -p ~/.gnupg
          echo "allow-loopback-pinentry" >> ~/.gnupg/gpg-agent.conf
          echo "use-agent" >> ~/.gnupg/gpg.conf
          gpgconf --reload gpg-agent

      - name: "‚òï Set up java"
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: maven
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD

      - name: "üóΩ Publish package"
        run: mvn clean deploy -DskipTests -Prelease -Dgpg.passphrase=${{ secrets.MAVEN_GPG_PASSPHRASE }}
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}

      - name: "Deploy parent POM manually"
        run: |
          mvn deploy:deploy-file -DpomFile=pom.xml -Dfile=pom.xml \
            -DgroupId=com.livetheoogway.crudstore -DartifactId=crud-store -Dversion=1.2.9.5 \
            -Dpackaging=pom -DrepositoryId=github \
            -Durl=https://maven.pkg.github.com/livetheoogway/crud-store \
            -s ${{ github.workspace }}/.github/workflows/settings.xml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_ACTOR: ${{ github.actor }}

      - name: "Deploy modules"
        run: |
          mvn -B deploy -DskipTests -pl crud-store-core,aerospike-crud-store \
            -s ${{ github.workspace }}/.github/workflows/settings.xml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_ACTOR: ${{ github.actor }}

  changelog_capture:
    needs: publish
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: read
    steps:
      - name: "üë∑ Checkout code"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: "üìé Install xmllint"
        run: sudo apt-get update && sudo apt-get install -y libxml2-utils

      - name: "üìë Setup release information"
        run: |
          pom_version=`xmllint --xpath '/*[local-name()="project"]/*[local-name()="version"]/text()' pom.xml`
          echo "POM_VERSION=$pom_version" >> $GITHUB_ENV

      - name: "‚úèÔ∏è Generate full changelog"
        id: extract-changelog
        uses: heinrichreimer/github-changelog-generator-action@v2.3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          stripGeneratorNotice: "true"

      - name: "‚õ≤ Commit files"
        env:
          CI_USER: github-actions
          CI_EMAIL: github-actions@github.com
        run: |
          git config --local user.name "$CI_USER"
          git status
          git add CHANGELOG.md && git commit -m 'Updated CHANGELOG.md' && echo "push=true" >> $GITHUB_ENV || echo "No changes to CHANGELOG.md"

      - name: "‚è´ Push changes"
        if: env.push == 'true'
        env:
          CI_USER: github-actions
          CI_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git push "https://$CI_USER:$CI_TOKEN@github.com/$GITHUB_REPOSITORY.git" HEAD:master